{"version":3,"sources":["img/err.gif","component/error.js","component/notrailer.js","component/trailer.js","img/defaultCartPoster.gif","component/cart.js","component/search.js","component/main.js","App.js","reportWebVitals.js","index.js"],"names":["Error","className","src","img","alt","NoTrailer","props","useEffect","setIsLoad","style","backgroundColor","Trailer","useState","data","setData","isLoad","error","setError","useLoading","loading","indicator","width","loaderProps","color","containerProps","indicatorEl","settings","dots","infinite","speed","slidesToShow","rows","beforeChange","afterChange","opts","playerVars","autoplay","enablejsapi","origin","window","location","_onReady","a","axios","get","then","response","results","catch","err","console","isShow","type","onClick","handleClick","length","map","videoId","key","onReady","onError","id","Cart","setIsShow","poster_path","defaultCartPoster","title","tagline","overview","undefined","genres","item","name","join","production_companies","release_date","Intl","NumberFormat","format","revenue","runtime","vote_average","SearchInput","items","setItem","value","setValue","onChange","selection","axiosMoviesId","itemToString","getInputProps","getItemProps","getMenuProps","getLabelProps","isOpen","highlightedIndex","inputValue","selectedItem","getRootProps","display","suppressRefError","placeholder","event","target","index","fontWeight","fontSize","MainComponent","backdrop_path","currentData","backgroundImage","setStyle","setErr","axiosAPI","url","movieId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90b650f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/err.0b7d80f7.gif\";","import React from 'react';\r\nimport img from '../img/err.gif';\r\nimport './css/error.css';\r\n\r\nconst Error = () => {\r\n    return(\r\n        <div className = 'error-img'>\r\n                <img src={img} alt=\"Error img\" />           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, {useEffect} from 'react';\r\nimport './css/error.css';\r\n\r\nconst NoTrailer = (props) => {\r\n    const style = {\r\n        backgroundColor: 'black',\r\n    }\r\n    useEffect(() => {\r\n        props.setIsLoad(false);\r\n    })\r\n    return(\r\n        <div className = 'error-img animated animate infinite' style={style}>\r\n            <h1>No Trailer Found !</h1>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoTrailer;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick';\r\nimport './css/trailer.css';\r\nimport YouTube from 'react-youtube';\r\nimport { useLoading, Puff } from '@agney/react-loading';\r\nimport Error from './error';\r\nimport NoTrailer from './notrailer';\r\n\r\nexport default function Trailer(props) {\r\n    const [data,setData] = useState([]);\r\n    const [isLoad, setIsLoad] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const { containerProps, indicatorEl } = useLoading({\r\n      loading: true,\r\n      indicator: <Puff width=\"70\" />,\r\n      loaderProps: {\r\n        // Any props here would be spread on to the indicator element.\r\n        style: { color : 'white', }\r\n      }\r\n    });\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        rows: 1,\r\n        beforeChange: () => {\r\n            setIsLoad(true);\r\n        },\r\n        afterChange: () => {\r\n          setIsLoad(false)\r\n        }\r\n    }\r\n\r\n    const opts = {\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 0,\r\n        enablejsapi: 1,\r\n        origin: window.location.origin\r\n      }\r\n    }\r\n\r\n    const handleClick = () => {\r\n      setIsLoad(true);\r\n      props.handleClick();\r\n    }\r\n\r\n    const _onReady = async () => {\r\n          setIsLoad(false);\r\n    }\r\n\r\n    const errorHandle = () => {\r\n      setError(true);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${props.data}/videos?api_key=32cd16f037bba76b28b59eee2f1cd7a3`)\r\n            .then(response => {\r\n                setData(response.data.results);\r\n                setError(false);\r\n            })\r\n            .catch(err => {\r\n              console.error(err);\r\n              setError(true);\r\n            });\r\n    },[props.data]);\r\n    return(\r\n      <>\r\n      {!props.isShow ? '' :\r\n          <div className=\"trailer animated-trailer\">\r\n            { isLoad &&\r\n                  <div className = 'loading'>\r\n                      <section {...containerProps}>\r\n                          {indicatorEl}\r\n                      </section> \r\n                  </div>\r\n            }\r\n            <button type=\"button\" onClick={()=>handleClick()}></button> \r\n            <Slider {...settings}>\r\n                {data.length === 0 ? <NoTrailer setIsLoad={setIsLoad}></NoTrailer> : data.map(data =>{\r\n                    return(\r\n                        <div className = 'item-video' key={data.id}>\r\n                          {error ? <Error></Error> :\r\n                             <YouTube videoId={data.key} opts = {opts} className='video' onReady = {() => _onReady()} onError = {() => errorHandle()}></YouTube>\r\n                          }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Slider>\r\n          </div>\r\n      }\r\n      </> \r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/defaultCartPoster.f289f1f4.gif\";","import React, {useState} from 'react';\r\nimport './css/cart.css';\r\nimport Trailer from './trailer';\r\nimport defaultCartPoster from '../img/defaultCartPoster.gif';\r\n\r\nfunction Cart(props) {\r\n    const data = props.data.data;\r\n    const [isShow, setIsShow] = useState(false);\r\n    const handleClick = () => {\r\n        setIsShow(!isShow);\r\n    }\r\n    return(\r\n        <>\r\n            <div className = 'main-cart animated'>\r\n                <div className = 'cart-poster'>\r\n                    <img src={data.poster_path ? `https://image.tmdb.org/t/p/w500${data.poster_path}` : defaultCartPoster} alt={data.title}/>\r\n                </div>\r\n                <div className = 'cart-info'>\r\n                    <h1>{data.title}</h1>\r\n                    <span className=\"tagline\">{data.tagline}</span>\r\n                    <p className='overview'>{data.overview}</p>\r\n                    <div className=\"additional-details\">\r\n                        <span className=\"genre-list\">{\r\n                            data.genres === undefined ? '' : data.genres\r\n                                .map(item =>{\r\n                                    return item.name;\r\n                                })\r\n                                .join(', ')\r\n                        }</span>\r\n                        <span className=\"production-list\">{\r\n                            data.production_companies === undefined ? '' : data.production_companies\r\n                            .map(item =>{\r\n                                return item.name;\r\n                            })\r\n                            .join(', ')\r\n                        }</span>\r\n                        <div className=\"release-details\">\r\n                            <div className=\"release-details-left\">\r\n                                <div className=\"release-details-item\">\r\n                                    Release:\r\n                                    <span className=\"meta-data\">{data.release_date}</span>\r\n                                </div>\r\n                                <div className=\"release-details-item\">\r\n                                    Box Office:\r\n                                    <span className=\"meta-data\">{'$' + new Intl.NumberFormat(\"en-emodeng\").format(data.revenue)}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"release-details-right\">\r\n                                <div className=\"release-details-item\">\r\n                                    Running Time:\r\n                                    <span className=\"meta-data\">{data.runtime ? data.runtime + ' Minutes' : \"NaN\"}</span>\r\n                                </div>\r\n                                <div className=\"release-details-item\">\r\n                                    Vote Average:\r\n                                    <span className=\"meta-data\">{data.vote_average ? data.vote_average : 'NaN'}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"trailer-btn\">\r\n                            <button type=\"button\" onClick={() => {handleClick()}}>Watch Trailer</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Trailer isShow = {isShow} data={data.id} handleClick={handleClick}></Trailer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React, {useState} from 'react';\r\nimport DownShift from 'downshift';\r\nimport axios from 'axios';\r\nimport './css/search.css';\r\n\r\nfunction SearchInput(props) {\r\n    const [items,setItem] = useState([]);\r\n    const [value,setValue] = useState('');\r\n    return (\r\n        <DownShift onChange = {selection => {\r\n            props.axiosMoviesId(selection.id);\r\n        }} itemToString = {item => (item ? item.value : '')}>\r\n            {({getInputProps, getItemProps, getLabelProps, getMenuProps, isOpen, inputValue, highlightedIndex, selectedItem, getRootProps}) => {\r\n                return(\r\n                <div className=\"search\">\r\n                    <div className = 'search-input' style = {{display: 'inline-block'}} {...getRootProps({},{suppressRefError: true})}>\r\n                        <input type ='text' value = {value} placeholder ='Search the movie...' {...getInputProps({\r\n                            onChange : event => {\r\n                                setValue(event.target.value);\r\n                                axios\r\n                                    .get(`https://api.themoviedb.org/3/search/movie?api_key=32cd16f037bba76b28b59eee2f1cd7a3&query=${event.target.value}`)\r\n                                    .then(response =>{\r\n                                        setItem(response.data.results);\r\n                                    })\r\n                                    .catch(error => console.error(error))\r\n                            }\r\n                        })} />\r\n                    </div>\r\n                    <ul {...getMenuProps()} className='list-suggest'>\r\n                        {isOpen ? items\r\n                            .map((item, index) =>{\r\n                                return(<li {...getItemProps({key : item.id, index, item, style: {\r\n                                    backgroundColor: highlightedIndex === index ? 'var(--color-font-special)' : '',\r\n                                    fontWeight: selectedItem === item ? 'bold' : 'normal',\r\n                                    fontSize: '17px',\r\n                                  },})}>\r\n                                      {item.title}\r\n                                </li>)\r\n                            })\r\n                        : null}\r\n                    </ul>\r\n                </div>)\r\n            }}\r\n        </DownShift>\r\n    )\r\n}\r\n\r\nexport default SearchInput;","import React, {useState, useEffect} from 'react';\r\nimport Cart from './cart';\r\nimport SearchInput from './search';\r\nimport axios from 'axios';\r\nimport './css/main.css';\r\nimport Error from './error';\r\n\r\nfunction MainComponent() {\r\n    const [currentData, setData] = useState({\r\n        data : {\r\n            id : 157336,\r\n            backdrop_path: '/xJHokMbljvjADYdit5fK5VQsXEG.jpg',\r\n            poster_path: \"/gEU2QniE6E77NI6lCU6MxlNBvIx.jpg\"\r\n        }\r\n    });\r\n    const [style,setStyle] = useState({\r\n        backgroundImage : null\r\n    })\r\n    const [err,setErr] = useState(false);\r\n    //API The movie database\r\n    function axiosAPI(url) {\r\n        axios\r\n            .get(url)\r\n            .then(response => {\r\n                setData({\r\n                    data : response.data\r\n                })\r\n                setErr(false);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                setErr(true);\r\n            });\r\n    }\r\n    function axiosMoviesId(movieId) {\r\n        let url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=32cd16f037bba76b28b59eee2f1cd7a3`;\r\n        axiosAPI(url);\r\n    }\r\n    useEffect(() => {\r\n        let url = `https://api.themoviedb.org/3/movie/${currentData.data.id}?api_key=32cd16f037bba76b28b59eee2f1cd7a3`;\r\n        axiosAPI(url);\r\n        setStyle({\r\n            backgroundImage : `url('https://image.tmdb.org/t/p/original${currentData.data.backdrop_path}')`,\r\n        })\r\n    },[currentData.data.id,currentData.data.backdrop_path]);\r\n    if(err) {\r\n        return(\r\n            <Error></Error>\r\n        )\r\n    }\r\n    else return(\r\n        <div style={style} className='main'>\r\n            <SearchInput axiosMoviesId = {axiosMoviesId}></SearchInput>\r\n            <Cart data = {currentData}></Cart>   \r\n        </div>\r\n    )\r\n}\r\nexport default MainComponent;\r\n","import './App.css';\nimport MainComponent from './component/main';\n\nfunction App() {\n  return (\n      <MainComponent></MainComponent>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './component/css/responsive.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}